<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<TestSpec>
    <Id>0004</Id>
    <Title>Return round scores in CSV format in Golf application</Title>
    <Category>solution-or-component-generation</Category>
    <Complexity>low</Complexity>
    <CodeRepository>https://github.com/PolinaTolkachova/golf-application</CodeRepository>
    <Stack>
        <Languages>
            <Language primary="true">Java</Language>
            <Language>HTML</Language>
            <Language>CSV</Language>
        </Languages>
    </Stack>
    <Task>
<![CDATA[
The application returns RoundScore page in HTML format in response to /round-score request.
Add endpoint returning round scores in CSV format if a client makes a request
with Accept HTTP header indicating that it expects text/csv content.
CSV response should contain the same fields as scorecardsTable in the given round-score-main.html.
]]>
    </Task>
    <Context>
        <Files>
            <File>pom.xml</File>
            <File>src/main/java/com/golf/app/AppConfiguration.java</File>
            <File>src/main/java/com/golf/app/api/CompetitionRestController.java</File>
            <File>src/main/java/com/golf/app/controller/RoundScoreController.java</File>
            <File>src/main/java/com/golf/app/model/Competition.java</File>
            <File>src/main/java/com/golf/app/model/Player.java</File>
            <File>src/main/java/com/golf/app/model/RoundScore.java</File>
            <File>src/main/java/com/golf/app/model/Score.java</File>
            <File>src/main/java/com/golf/app/dto/RoundScoreDto.java</File>
            <File>src/main/resources/templates/round-score/round-score-main.html</File>
        </Files>
    </Context>
    <TestPlan>
        <TestStep>Update database configuration in application.properties to make it compatible with your local environment</TestStep>
        <TestStep>Build the application with the command: `mvn clean install`</TestStep>
        <TestStep>Launch the application with the command: `mvn spring-boot:run`</TestStep>
        <TestStep><![CDATA[
Send  _ /round-score _  request with HTTP header  _ "Accept: text/csv" _  

```bash
curl -s -v -u 1:1 --header 'accept: text/csv' http://localhost:8082/round-score
```
]]>
        </TestStep>
        <TestStep><![CDATA[
Verify the response headers and body contains CSV response like the given below:

```
HTTP status code: 200
Content-Type: text/csv;charset=UTF-8
```

```csv
Id,Date,Player,HCP,Competition,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,Stroke,Penalty,GrossScore,NetScore,NetScorePar,Stableford
37,2024-04-01,LAGERLÖF Ögge,36.0,2024,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,81,0,81,45,-27,63
49,2024-04-14,TALKACHOVA Palina,5.0,may,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,90,0,90,85,13,23
69,2024-03-03,ZHUK Aliaksandr,17.0,third,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,33,84,0,84,67,-5,67
70,2024-03-03,ZHUK Aliaksandr,17.0,third,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,333,384,0,384,367,295,67
71,2024-03-03,AGARWALLA Anjali,24.0,third,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,90,0,90,66,-6,42
```
]]>
        </TestStep>
        <TestStep>Add results of the manual tests to output.md. See (testing-template.md)[testing-template.md]</TestStep>
    </TestPlan>
    <Assertion>
        <Assert type="completeness">Make sure that GET endpoint producing "text/csv" is added.</Assert>
        <Assert type="completeness">Ensure the changed code allows to convert collection of RoundScore to CSV format if it is requested.</Assert>
        <Assert type="completeness">Ensure the produced CSV has headers corresponding to scorecardsTable fields in the round-score-main.html.</Assert>
        <Assert type="completeness">Make sure that the application is built without errors.</Assert>
        <Assert type="completeness">Make sure that the application is launched without errors.</Assert>
        <Assert type="completeness">Make sure the application returns round scores in CSV format in response to a request that accepts text/csv</Assert>
        <Assert type="accuracy">Make sure that CHANGES do not contain unrequested code modifications, unused imports or code.</Assert>
        <Assert type="accuracy">Ensure that the CHANGED code is syntactically correct, compiles without errors, and accomplishes the intended functionality.</Assert>
        <Assert type="accuracy">Make sure that Spring Boot's features such as dependency injection, auto-configuration, and data access abstraction are properly utilized in the the CHANGED code.</Assert>
        <Assert type="accuracy">Ensure that the CHANGED code is well-documented, with clear and concise documentation for each part of the code.</Assert>
        <Assert type="accuracy">Ensure that the CHANGED code is clean, readable, adheres to best practices and naming conventions.</Assert>
        <Assert type="accuracy">Ensure that the CHANGED code is easily maintainable, with proper structure and separation of concerns.</Assert>
        <Assert type="accuracy">Make sure the CHANGED code makes robust exception handling to handle unexpected issues gracefully and prevent the application from crashing.</Assert>
        <Assert type="accuracy">Ensure that CHANGED code keeps application secure by using proper authentication, authorization, and data validation techniques, and protect the application from common security vulnerabilities.</Assert>
        <Assert type="accuracy">Ensure that CHANGED application configuration is flexible and externalized to efficiently manage different environments.</Assert>
        <Assert type="accuracy">Make sure the CHANGES utilizes Spring HTTP Message Conversion to converting domain object to "text/csv" MediaType.</Assert>
        <Assert type="accuracy">Make sure the CHANGES preserves the default RoundScoreController GET endpoint producing all media types other than "text/csv".</Assert>
        <Assert type="accuracy">Make sure the CHANGES supposes a proven CSV processing library to write CSV.</Assert>
    </Assertion>
    <MetaInfo>
    </MetaInfo>
</TestSpec>