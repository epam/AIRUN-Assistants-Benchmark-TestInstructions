From 29ce96ba9d5919b16ff569488bef55a96c3ab443 Mon Sep 17 00:00:00 2001
From: siarhei-z1 <148881157+siarhei-z1@users.noreply.github.com>
Date: Thu, 16 Jan 2025 18:46:22 +0300
Subject: [PATCH] Migrate in-memory user and roles definitions to database

Exemplar impementation for agentic workflow test 0011.
---
 .../golf/app/security/AppSecurityConfig.java  | 34 +++++--------------
 .../resources/db/migration/V11_0__schema.sql  | 13 +++++++
 .../resources/db/migration/V11_1__data.sql    | 13 +++++++
 3 files changed, 35 insertions(+), 25 deletions(-)
 create mode 100644 src/main/resources/db/migration/V11_0__schema.sql
 create mode 100644 src/main/resources/db/migration/V11_1__data.sql

diff --git a/src/main/java/com/golf/app/security/AppSecurityConfig.java b/src/main/java/com/golf/app/security/AppSecurityConfig.java
index 73383ca..6c67ad2 100644
--- a/src/main/java/com/golf/app/security/AppSecurityConfig.java
+++ b/src/main/java/com/golf/app/security/AppSecurityConfig.java
@@ -1,45 +1,29 @@
 
 package com.golf.app.security;
 
-import com.golf.app.enums.Role;
+import static org.springframework.security.config.Customizer.withDefaults;
+
+import javax.sql.DataSource;
+
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.http.HttpMethod;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
-import org.springframework.security.core.userdetails.User;
-import org.springframework.security.core.userdetails.UserDetails;
+import org.springframework.security.core.userdetails.UserDetailsService;
 import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
 import org.springframework.security.crypto.password.PasswordEncoder;
-import org.springframework.security.provisioning.InMemoryUserDetailsManager;
+import org.springframework.security.provisioning.JdbcUserDetailsManager;
 import org.springframework.security.web.SecurityFilterChain;
 
-import static org.springframework.security.config.Customizer.withDefaults;
-
 @Configuration
 @EnableWebSecurity
 public class AppSecurityConfig {
 
     @Bean
-    public InMemoryUserDetailsManager userDetailsService() {
-        UserDetails user1 = User.withUsername("user")
-            .password(passwordEncoder().encode("userPass"))
-            .roles(Role.USER.name())
-            .build();
-        UserDetails user2 = User.withUsername("1")
-            .password(passwordEncoder().encode("1"))
-            .roles(Role.USER.name())
-            .build();
-        UserDetails coach = User.withUsername("coach")
-            .password(passwordEncoder().encode("coachPass"))
-            .roles(Role.COACH.name())
-            .build();
-        UserDetails admin = User.withUsername("a")
-            .password(passwordEncoder().encode("a"))
-            .roles(Role.ADMIN.name())
-            .build();
-
-        return new InMemoryUserDetailsManager(user1, user2, coach, admin);
+    public UserDetailsService userDetailsService(DataSource dataSource) {
+        JdbcUserDetailsManager users = new JdbcUserDetailsManager(dataSource);
+        return users;
     }
 
     @Bean
diff --git a/src/main/resources/db/migration/V11_0__schema.sql b/src/main/resources/db/migration/V11_0__schema.sql
new file mode 100644
index 0000000..8846ff7
--- /dev/null
+++ b/src/main/resources/db/migration/V11_0__schema.sql
@@ -0,0 +1,13 @@
+CREATE TABLE IF NOT EXISTS users (
+    username VARCHAR(50) NOT NULL PRIMARY KEY,
+    password VARCHAR(100) NOT NULL,
+    enabled BOOLEAN NOT NULL
+);
+
+CREATE TABLE IF NOT EXISTS authorities (
+    username VARCHAR(50) NOT NULL,
+    authority VARCHAR(50) NOT NULL,
+    CONSTRAINT fk_authorities_users FOREIGN KEY (username) REFERENCES users(username)
+);
+
+CREATE UNIQUE INDEX ix_auth_username ON authorities (username, authority);
\ No newline at end of file
diff --git a/src/main/resources/db/migration/V11_1__data.sql b/src/main/resources/db/migration/V11_1__data.sql
new file mode 100644
index 0000000..7e7eaad
--- /dev/null
+++ b/src/main/resources/db/migration/V11_1__data.sql
@@ -0,0 +1,13 @@
+-- Insert existing users
+INSERT INTO users (username, password, enabled) VALUES
+('user', '$2a$10$eWpP7/tdQM1gShtMC2dEtOReHUgRC6ImkoaKygE0JSRKDoDvOWLRW', true),
+('1', '$2a$10$Uh7aJbjjCIZjfgfRYD2lxuWNAsFXZIfFDBnL/75yUh959WmtHK.VO', true),
+('coach', '$2a$10$QAlLQjUrC9D/XlDkveCGm.oU53ufhXYqO7blYkL5OVL2LJRYooewq', true),
+('a', '$2a$10$jn5UYee96Ay8OWss1QAAHO61hDakVLaUFmQ/fFiUmttQXMfLVfVUq', true);
+
+-- Insert roles
+INSERT INTO authorities (username, authority) VALUES
+('user', 'ROLE_USER'),
+('1', 'ROLE_USER'),
+('coach', 'ROLE_COACH'),
+('a', 'ROLE_ADMIN');
\ No newline at end of file
-- 
2.45.1

